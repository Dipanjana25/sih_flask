import numpy as np
import pandas as pd
import flair, torch
from annoy import AnnoyIndex
from flair.embeddings import TransformerWordEmbeddings
from flair.data import Sentence

flair.device = torch.device('cpu')

df=pd.read_csv("data-set/cities_r2.csv")
df["city"]=df["city"].str.lower()
df=df["city"]
df=df.drop_duplicates()
df=df.dropna()
df=df.to_frame(name="city")

# init embedding

# USE roberta-base-cased for final deployed model
glove_embedding = TransformerWordEmbeddings('bert-base-cased')

locs=["Bijapur", "Hanoi", "Kabul", "Asmara", "Kalyan-Dombivli", "Bahadurgarh", "San Marino", "Almaty", "Doha", "Amroha", "Kurnool", "Bhopal", "Munich", "Chittagong", "Cuba", "Naples", "Anantapur", "Madagascar", "Senegal", "Bhatpara", "Dhanbad", "Hansi", "Casablanca", "Zurich", "India", "Cote d'Ivoire", "Tanzania", "South Sudan", "New York City", "Godhra", "Bhiwani", "Cuttack", "Pimpri-Chinchwad", "Bhuj", "Brazzaville", "Sfax", "Tirupati", "Pusa", "Orai", "Vijayawada", "Kulti", "Kumbakonam", "Fatehabad", "Karur", "Gujarat", "Loni", "Costa Rica", "Kanhangad", "Ranipet", "Jamshedpur", "Netherlands", "Kozhikode", "Ludhiana", "Gwalior", "Tohana", "Pretoria", "Serbia", "Bally", "Kiribati", "Cape Town", "Sharm El Sheikh", "Russia", "Spain", "Croatia", "Italy", "Khammam", "Hassan", "Lithuania", "Mehsana", "Dehradun", "Ranchi", "New Zealand", "Mogadishu", "Durgapur", "Mizoram", "Bangui", "Belarus", "Constantine", "Bhagalpur", "Navsari", "Kadapa", "Karaikudi", "Neyveli", "Bihar Sharif", "Indonesia", "Lucknow", "Kenya", "Thailand", "Freetown", "Nashik", "Kaithal", "Bidhannagar", "Karnal", "Nagercoil", "Hajipur", "Parbhani", "Bangalore", "Taiwan", "Bhilwara", "Guna", "Sudan", "Meghalaya", "Jind", "Chandigarh", "Tamil Nadu", "Kigali", "Jhunjhunun", "Raurkela", "Siliguri", "Luanda", "Kancheepuram", "Antigua and Barbuda", "Moscow", "Oslo", "Delhi", "Ottawa", "Ramagundam", "Sonipat", "Rajkot", "Rio de Janeiro", "Tripoli", "Windhoek", "Srikakulam", "Congo", "Tashkent", "Myanmar", "Sultan Pur Majra", "Tirupur", "Marshall Islands", "United States", "Abohar", "Mahendragarh", "Beijing", "Madurai", "Machilipatnam", "Kuwait City", "Douala", "Iran", "Syria", "Aurangabad", "Jamaica", "Gaya", "Sri Lanka", "Kanpur", "Dhaka", "Kolkata", "Sangli-Miraj & Kupwad", "Bareilly", "Asansol", "Bhimavaram", "Malegaon", "Hindupur", "Kerala", "Suriname", "Shivpuri", "Barasat", "Firozabad", "Alexandria", "Assam", "Moldova", "Jalgaon", "Quebec City", "Ozhukarai", "Tripura", "Modinagar", "Tiruchirappalli", "Sambalpur", "Latvia", "Guwahati", "Karnataka", "Dewas", "Luxembourg", "Ajman", "Ambattur", "Czechia", "Mexico", "Korba", "Banda", "Jhansi", "Madhubani", "Venezuela", "Samoa", "Ashoknagar Kalyangarh", "West Bengal", "Brisbane", "Benin", "Avinashi", "Guinea", "Nandurbar", "Helsinki", "Sasaram", "Honduras", "Thane", "Bosnia and Herzegovina", "El Salvador", "Mandi", "Jorhat", "Medina", "Tiruvannamalai", "Patna", "Buenos Aires", "Marseille", "Chhattisgarh", "Barbados", "Morocco", "Istanbul", "Lesotho", "Vietnam", "Yerevan", "Ecuador", "Kuala Lumpur", "Chidambaram", "Junagadh", "Norway", "Nagapattinam", "Copenhagen", "Milan", "Geneva", "Vizianagaram", "Sharjah", "Shantipur", "Argentina", "Nigeria", "Mira and Bhayander", "Saint Lucia", "Thanesar", "Korea, North", "Philadelphia", "Noida", "Gabon", "Paraguay", "Gorakhpur", "Agartala", "Punjab", "Rajahmundry", "Kiev", "Panvel", "Lyon", "Sitapur", "Slovakia", "Kakinada", "Mathura", "Jalna", "Maldives", "Accra", "Haldia", "Phagwara", "Pakistan", "Algiers", "Equatorial Guinea", "Kamarhati", "Chad", "Egypt", "Adoni", "Nellore", "Ashgabat", "Baraut", "Kalpakkam", "Samastipur", "Sao Tome and Principe", "Alwar", "Durban", "Gandhinagar", "Sana'a", "Hargeisa", "Albania", "Pehowa", "Aswan", "Estonia", "Warsaw", "Canada", "Telangana", "Vatican City", "Umm al-Quwain", "Athens", "Cologne", "Tumkur", "Tonga", "Switzerland", "Dadra and Nagar Haveli and Daman and Diu", "Begusarai", "St. Petersburg", "Aligarh", "Nepal", "Mozambique", "Mannargudi", "Ho Chi Minh City", "Belize", "Howrah", "Calgary", "Chhindwara", "Dinapur Nizamat", "Palau", "Oman", "Damascus", "Berlin", "Purulia", "Juba", "Manama", "Islamabad", "Agra", "Chandausi", "Riyadh", "Grenada", "Angola", "Prague", "Bangladesh", "Bogota", "Palwal", "Adis Abeba", "Nalgonda", "Brussels", "Jammu", "Mahaboobnagar", "Giza", "Baghdad", "Purnia", "Hungary", "Washington, D.C.", "Jodhpur", "Laos", "Lebanon", "Bardhaman", "Tenali", "Muscat", "Ethiopia", "Jordan", "Guntur", "Panipat", "Marrakech", "Cambodia", "Bikaner", "Raebareli", "Fujairah", "Nangloi Jat", "Tuticorin", "Luxor", "Praia", "Greece", "Kishangarh", "Israel", "Kishanganj", "Yaound√©", "Kolhapur", "Singapore", "Korea, South", "Rae Bareli", "Erbil", "Aden", "Algeria", "Houston", "Muzaffarpur", "Bahamas", "Saint Kitts and Nevis", "Eswatini", "Gandhidham", "Burhanpur", "Tezpur", "Hisar", "Lisbon", "Banjul", "Pollachi", "Los Angeles", "United Kingdom", "Anand", "Andorra", "Unnao", "Nur-Sultan", "Mauritius", "Deoli", "Fatehpur", "Surendranagar", "Vaniyambadi", "Kyrgyzstan", "Khora", "Cuddalore", "Belgium", "Romania", "Bhubaneswar", "Cairo", "Iceland", "Kazakhstan", "Deoghar", "Toronto", "Tuvalu", "Al Ain", "Maheshtala", "Montreal", "Djibouti", "Bilaspur", "Saudi Arabia", "Abu Dhabi", "Haldwani", "Nandyal", "Frankfurt", "Chirala", "Krakow", "Gaborone", "Fez", "Togo", "London", "Dindigul", "Puducherry", "Coimbatore", "Guinea-Bissau", "Sierra Leone", "Conakry", "Mysuru", "Jabalpur", "Mandi Dabwali", "Jhajjar", "Eritrea", "Bettiah", "Seoul", "Ballari", "Naihati", "Baramula", "Shahjahanpur", "Bharatpur", "Amritsar", "Raichur", "Imphal", "Perth", "Bhutan", "Wellington", "Bahraich", "Lakshadweep", "Tunis", "San Francisco", "Dibrugarh", "Mahbubnagar", "Veraval", "Ambala", "Portugal", "Peru", "Kuppam", "Tokyo", "Atlanta", "Rotterdam", "Mauritania", "Iraq", "Proddatur", "Baranagar", "Morena", "Kollam", "Melbourne", "Manila", "Mali", "Yemen", "Astana", "Rewa", "Andhra Pradesh", "Uttar Pradesh", "Lusaka", "Liechtenstein", "Amravati", "Nairobi", "France", "Chandrapur", "Kota", "Pune", "Vadodara", "Warangal", "Udupi", "Dodoma", "Guyana", "Belgaum", "Malta", "Bhind", "China", "Sao Paulo", "Deoria", "Thrissur", "Dhule", "Aizawl", "Supaul", "Karimnagar", "Batala", "Denmark", "Edmonton", "Thanjavur", "Jakarta", "Amsterdam", "Benghazi", "Fiji", "United Arab Emirates", "Lahore", "Dehri", "Dharmapuri", "Nagaland", "Madhyamgram", "Tbilisi", "Niger", "Boston", "Rajapalaiyam", "Munger", "Ukraine", "Hosur", "Santiago", "Austria", "Zambia", "Jharkhand", "Japan", "Thiruvananthapuram", "Manmad", "Katihar", "Kot Kapura", "Bhiwandi", "Kolar", "Bolivia", "Latur", "Nanded", "Kosovo", "Hathras", "Uzbekistan", "Monaco", "Indore", "Ulhasnagar", "Moga", "Liberia", "Etawah", "Gambia", "Isfahan", "Udgir", "Gurgaon", "Bujumbura", "Pallavaram", "Bharuch", "Tajikistan", "Narasaraopet", "Ladwa", "Saint Vincent and the Grenadines", "Mumbai", "Saharanpur", "Montenegro", "Nagpur", "Ganganagar", "Jamalpur", "Trinidad and Tobago", "Uluberia", "Philippines", "Bissau", "Bihar", "Ireland", "Dallas", "Vienna", "Varanasi", "Avadi", "Central African Republic", "Ichalkaranji", "Bhusawal", "Port Elizabeth", "Brazil", "Meerut", "Haiti", "Amman", "Navi Mumbai", "Sweden", "N'Djamena", "Ras al-Khaimah", "Dominican Republic", "Ahmednagar", "Nizamabad", "Narnaul", "Denver", "Nauru", "Cameroon", "Mexico City", "Slovenia", "Miami", "Berhampur", "Tiruvottiyur", "Sikkim", "Lima", "Odisha", "Ghana", "Satara", "Mau", "Charkhi Dadri", "Ujjain", "Kavali", "Silchar", "North Macedonia", "Habra", "Jalandhar", "Hanumangarh", "Guatemala", "Purna", "Budaun", "Nagaur", "Rajpur Sonarpur", "Cyprus", "Rourkela", "Germany", "Jaipur", "Kochi", "Bangkok", "Bishkek", "Rajasthan", "Poland", "Bahrain", "Karachi", "Phusro", "Shanghai", "Tinsukia", "Kashipur", "Sambhal", "Seychelles", "Mangalore", "Panchkula", "Lagos", "Libreville", "Mongolia", "Vidisha", "Safidon", "Oran", "Chapra", "Burundi", "Andaman and Nicobar Islands", "Raipur", "Ajmer", "Narwana", "Malaysia", "Ongole", "Micronesia", "Pali", "Stockholm", "Chile", "South Africa", "Monrovia", "Rabat", "Brunei", "Adityapur", "Baku", "Tirunelveli", "Jeddah", "Niamey", "Rohtak", "Caracas", "Tehran", "Saharsa", "Uttarakhand", "Dakar", "Kumasi", "Uruguay", "Bhilai Nagar", "Nicaragua", "Armenia", "Azerbaijan", "Zimbabwe", "Gulbarga", "Bamako", "Sivakasi", "Hubli and Dharwad", "Kuwait", "Krishnanagar", "Shillong", "Auckland", "Satna", "Solapur", "Arunachal Pradesh", "Georgia", "Palani", "Sangli", "Hinganghat", "Allahabad", "Bizerte", "Rome", "Bokaro Steel City", "Darbhanga", "Madrid", "Uganda", "Maharashtra", "Finland", "Hoshiarpur", "Chennai", "Sirsa", "Solomon Islands", "Haryana", "Siwan", "Buxar", "Paris", "Kinshasa", "Burkina Faso", "Eluru", "Malawi", "Vancouver", "Hazaribagh", "Davanagere", "Afghanistan", "Ghaziabad", "Budapest", "Kampala", "Hong Kong", "Basra", "Rampur", "Ramgarh", "Hamburg", "Libya", "Vanuatu", "Botswana", "Panama", "Harare", "Vasai-Virar", "Haora", "Dominica", "Ratia", "Guntakal", "Turkey", "Dar es Salaam", "Valparai", "Beirut", "Sydney", "Turkmenistan", "Udaipur", "Madhya Pradesh", "Pathankot", "Abuja", "Hospet", "Hyderabad", "Faridabad", "Yamunanagar", "Bhavnagar", "Jamnagar", "Hapur", "Adilabad", "Chicago", "Ahmedabad", "Gangapur", "Motihari", "Himachal Pradesh", "Comoros", "Addis Ababa", "Barcelona", "Aleppo", "Visakhapatnam", "Rwanda", "Somalia", "Hooghly", "Colombia", "Moradabad", "Timor-Leste", "Serampore", "Shimoga", "Rewari", "Chittoor", "Thoothukudi", "Seattle", "Tangier", "Damoh", "Maputo", "Cabo Verde", "Tunisia", "Australia", "Manipur", "Srinagar", "Dubai", "Mecca", "Johannesburg", "North Dumdum", "Raiganj", "Ratlam", "Goa", "Qatar", "Papua New Guinea", "Salem", "Akola", "Namibia", "Bulgaria", ]

# create sentence.
tmp=[]
# for i,j in df.iterrows():
#     tmp.append(Sentence(str(j["city"])))

for i in locs:
    tmp.append(Sentence(i))
# embed a sentence using glove.
glove_embedding.embed(tmp)

embeds=[]
for i in tmp:
    embeds.append(i[0].embedding)

tmp_embeds=[]
for i in embeds:
    tmp_embeds.append(np.array(i.cpu()))

tmp_embeds=np.array(tmp_embeds)
print(type(embeds[0]))
print(tmp_embeds.shape)

search_index = AnnoyIndex(tmp_embeds.shape[1], 'angular')
for i in range(len(embeds)):
    search_index.add_item(i, tmp_embeds[i])

search_index.build(10)
search_index.save('model-13dec.ann')